{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yggyg\\\\Desktop\\\\telegram bot banhang\\\\telegram_shop_bot\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]); // Giỏ hàng ban đầu là một mảng trống\n\n  // Load cart from localStorage when the app initializes\n  useEffect(() => {\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCart(savedCart);\n  }, []);\n\n  // Update localStorage when cart changes\n  useEffect(() => {\n    if (cart.length > 0) {\n      localStorage.setItem('cart', JSON.stringify(cart));\n    }\n  }, [cart]);\n\n  // Thêm sản phẩm vào giỏ hàng\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingProduct = prevCart.find(item => item.id === product.id);\n      let updatedCart;\n      if (existingProduct) {\n        // If product exists, update the quantity\n        updatedCart = prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + product.quantity\n        } : item);\n      } else {\n        // If product doesn't exist, add it to the cart\n        updatedCart = [...prevCart, product];\n      }\n\n      // Save the updated cart to localStorage\n      localStorage.setItem('cart', JSON.stringify(updatedCart)); // Save to localStorage\n\n      return updatedCart;\n    });\n  };\n\n  // Cập nhật số lượng sản phẩm trong giỏ hàng\n  const updateQuantity = (id, type) => {\n    setCart(prevCart => {\n      const updatedCart = prevCart.map(item => {\n        if (item.id === id) {\n          const updatedQuantity = type === 'increase' ? item.quantity + 1 : item.quantity - 1;\n          item.quantity = updatedQuantity > 0 ? updatedQuantity : 1; // Đảm bảo số lượng >= 1\n        }\n        return item;\n      });\n      return updatedCart;\n    });\n  };\n\n  // Xóa sản phẩm khỏi giỏ hàng\n  const removeFromCart = id => {\n    setCart(prevCart => prevCart.filter(item => item.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      updateQuantity,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","savedCart","JSON","parse","localStorage","getItem","length","setItem","stringify","addToCart","product","prevCart","existingProduct","find","item","id","updatedCart","map","quantity","updateQuantity","type","updatedQuantity","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yggyg/Desktop/telegram bot banhang/telegram_shop_bot/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect  } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);  // Giỏ hàng ban đầu là một mảng trống\r\n\r\n\r\n   // Load cart from localStorage when the app initializes\r\n   useEffect(() => {\r\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    setCart(savedCart);\r\n  }, []);\r\n\r\n  // Update localStorage when cart changes\r\n  useEffect(() => {\r\n    if (cart.length > 0) {\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n  }, [cart]);\r\n\r\n  // Thêm sản phẩm vào giỏ hàng\r\n  const addToCart = (product) => {\r\n    setCart((prevCart) => {\r\n      const existingProduct = prevCart.find((item) => item.id === product.id);\r\n      \r\n      let updatedCart;\r\n      if (existingProduct) {\r\n        // If product exists, update the quantity\r\n        updatedCart = prevCart.map((item) =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + product.quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        // If product doesn't exist, add it to the cart\r\n        updatedCart = [...prevCart, product];\r\n      }\r\n  \r\n      // Save the updated cart to localStorage\r\n      localStorage.setItem('cart', JSON.stringify(updatedCart));  // Save to localStorage\r\n  \r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  // Cập nhật số lượng sản phẩm trong giỏ hàng\r\n  const updateQuantity = (id, type) => {\r\n    setCart((prevCart) => {\r\n      const updatedCart = prevCart.map(item => {\r\n        if (item.id === id) {\r\n          const updatedQuantity = type === 'increase' ? item.quantity + 1 : item.quantity - 1;\r\n          item.quantity = updatedQuantity > 0 ? updatedQuantity : 1; // Đảm bảo số lượng >= 1\r\n        }\r\n        return item;\r\n      });\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  // Xóa sản phẩm khỏi giỏ hàng\r\n  const removeFromCart = (id) => {\r\n    setCart(prevCart => prevCart.filter(item => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, updateQuantity, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}