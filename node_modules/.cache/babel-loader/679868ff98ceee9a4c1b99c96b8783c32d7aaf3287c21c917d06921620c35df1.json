{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yggyg\\\\Desktop\\\\telegram bot banhang\\\\telegram_shop_bot\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n\n  // Load cart from localStorage when the app initializes\n  useEffect(() => {\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCart(savedCart);\n  }, []);\n\n  // Update localStorage when cart changes\n  useEffect(() => {\n    if (cart.length > 0) {\n      localStorage.setItem('cart', JSON.stringify(cart));\n    }\n  }, [cart]);\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingProduct = prevCart.find(item => item.id === product.id);\n      if (existingProduct) {\n        return prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + product.quantity\n        } : item);\n      } else {\n        return [...prevCart, product];\n      }\n    });\n  };\n  const updateQuantity = (id, quantity) => {\n    setCart(prevCart => {\n      return prevCart.map(item => item.id === id ? {\n        ...item,\n        quantity\n      } : item);\n    });\n  };\n  const removeFromCart = id => {\n    setCart(prevCart => prevCart.filter(item => item.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      updateQuantity,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the CartContext\n_s(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","savedCart","JSON","parse","localStorage","getItem","length","setItem","stringify","addToCart","product","prevCart","existingProduct","find","item","id","map","quantity","updateQuantity","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/yggyg/Desktop/telegram bot banhang/telegram_shop_bot/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create a context\r\nconst CartContext = createContext();\r\n\r\n// Provider component\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Load cart from localStorage when the app initializes\r\n  useEffect(() => {\r\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    setCart(savedCart);\r\n  }, []);\r\n\r\n  // Update localStorage when cart changes\r\n  useEffect(() => {\r\n    if (cart.length > 0) {\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n  }, [cart]);\r\n\r\n  const addToCart = (product) => {\r\n    setCart((prevCart) => {\r\n      const existingProduct = prevCart.find((item) => item.id === product.id);\r\n      if (existingProduct) {\r\n        return prevCart.map((item) =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + product.quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevCart, product];\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateQuantity = (id, quantity) => {\r\n    setCart((prevCart) => {\r\n      return prevCart.map((item) =>\r\n        item.id === id ? { ...item, quantity } : item\r\n      );\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (id) => {\r\n    setCart((prevCart) => prevCart.filter((item) => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, updateQuantity, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the CartContext\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAChEL,OAAO,CAACC,SAAS,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAT,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,CAACO,MAAM,GAAG,CAAC,EAAE;MACnBF,YAAY,CAACG,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACT,IAAI,CAAC,CAAC;IACpD;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMU,SAAS,GAAIC,OAAO,IAAK;IAC7BV,OAAO,CAAEW,QAAQ,IAAK;MACpB,MAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAIH,eAAe,EAAE;QACnB,OAAOD,QAAQ,CAACK,GAAG,CAAEF,IAAI,IACvBA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAClB;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAGP,OAAO,CAACO;QAAS,CAAC,GACvDH,IACN,CAAC;MACH,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,QAAQ,EAAED,OAAO,CAAC;MAC/B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,cAAc,GAAGA,CAACH,EAAE,EAAEE,QAAQ,KAAK;IACvCjB,OAAO,CAAEW,QAAQ,IAAK;MACpB,OAAOA,QAAQ,CAACK,GAAG,CAAEF,IAAI,IACvBA,IAAI,CAACC,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGD,IAAI;QAAEG;MAAS,CAAC,GAAGH,IAC3C,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,cAAc,GAAIJ,EAAE,IAAK;IAC7Bf,OAAO,CAAEW,QAAQ,IAAKA,QAAQ,CAACS,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClE,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEU,SAAS;MAAES,cAAc;MAAEC;IAAe,CAAE;IAAAtB,QAAA,EAC9EA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA5B,EAAA,CAlDaF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAmDzB,OAAO,MAAMgC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,UAAU,CAACK,WAAW,CAAC;AAAA;AAACkC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}